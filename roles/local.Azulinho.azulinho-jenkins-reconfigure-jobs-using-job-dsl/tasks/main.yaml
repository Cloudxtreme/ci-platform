---

- name: install httplib2
  pip: name=httplib2
    state=present
    executable=/usr/local/bin/pip2.7
  tags:
    - jenkins_job_dsl

- name: delete old seed files from the seed directory
  command: rm -rf /etc/jenkins_seed_jobs/
  sudo: true
  tags:
    - jenkins_job_dsl

# /etc/jenkins_seed_jobs contains the XML based job definitions for the
# jenkins seed jobs that will execute the DSL groovy code
#
- name: create /etc/jenkins_seed_jobs directories
  file: path={{ item }} state=directory
  with_items:
    - /etc/jenkins_seed_jobs
    - /etc/jenkins_seed_jobs/seeds
    - /etc/jenkins_seed_jobs/dsl
  tags:
    - jenkins_job_dsl

# we keep the XML seed job definitions in :
# <role>/files/seed_jobs_definitions/
#
- name: upload jenkins seed jobs definitions
  copy: dest="/etc/jenkins_seed_jobs/seeds/{{ ''.join(item.split('/')[-1:]) }}"
    src={{ item }}
  with_fileglob:
    - seed_jobs_definitions/*
  tags:
    - jenkins_job_dsl

# we register the list of seed jobs into a variable, by grabbing the stdout
# of the ls command
#
- name: gather list of seed jobs
  command: ls /etc/jenkins_seed_jobs/seeds/
  register: _seed_dsl_jobs
  tags:
    - jenkins_job_dsl

# and upload the DSL seeds into jenkins
#
- name: upload new job and ignore errors if it already exists
  shell: curl -X POST "http://localhost:8080/createItem?name={{item}}" --user {{azulinho_jenkins_server['user']}}:{{azulinho_jenkins_server['password']}} --data-binary "@/etc/jenkins_seed_jobs/seeds/{{item}}" -H "Content-Type:text/xml"
  with_items:
    - "{{ _seed_dsl_jobs.stdout }}"
  tags:
    - jenkins_job_dsl

# and update the jobs if they already exist
#
- name: update jobs if they already exist
  shell: curl -X POST "http://localhost:8080/job/{{item}}/config.xml" --user {{azulinho_jenkins_server['user']}}:{{azulinho_jenkins_server['password']}} --data-binary "@/etc/jenkins_seed_jobs/seeds/{{item}}" -H "Content-Type:text/xml"
  with_items:
    - "{{ _seed_dsl_jobs.stdout }}"
  tags:
    - jenkins_job_dsl
