---

# Get latest Jenkins update file
- name: Get Jenkins updates
  sudo: yes
  get_url: url=http://updates.jenkins-ci.org/update-center.json
    dest={{ azulinho_jenkins_plugins['updates_dest'] }}
    thirsty=yes
    mode=0440
  register: _jenkins_updates
  tags: ['jenkins', 'jenkins_plugins']

# Jenkins Update-center
- name: Update-center Jenkins
  sudo: yes
  shell: "cat {{azulinho_jenkins_plugins['updates_dest']}} | sed '1d;$d' | curl -X POST -H 'Accept: application/json' -d @- http://localhost:{{azulinho_jenkins_plugins['port']}}/updateCenter/byId/default/postBack"
  when: _jenkins_updates.changed
  tags: ['jenkins', 'jenkins_plugins']

- name: create /var/lib/jenkins/plugins
  file: path="{{ azulinho_jenkins_plugins['plugins_dir'] }}"
    state=directory
    owner=jenkins
    group=jenkins
  tags: ['jenkins', 'jenkins_plugins']

- name: install wget
  yum: name=wget
    state=present
  tags: ['jenkins', 'jenkins_plugins']

- name: download and install plugins
  get_url: url=http://ftp.nluug.nl/programming/jenkins/plugins/{{ item.name }}/{{ item.version }}/{{ item.name }}.hpi
    dest={{ azulinho_jenkins_plugins['plugins_dir'] }}
  with_items: azulinho_jenkins_plugins['plugins']
  register: _jenkins_official_plugins
  tags: ['jenkins', 'jenkins_plugins']

    # Some plugins are not available on the jenkins website
- name: download and install plugins (non-published)
  get_url: url={{ item }}
    dest={{ azulinho_jenkins_plugins['plugins_dir'] }}
  with_items: azulinho_jenkins_plugins['non_published_plugins']
  register: _jenkins_unofficial_plugins
  tags: ['jenkins', 'jenkins_plugins', 'jenkins_nonpublished_plugins']

- name: update plugin file ownership to jenkins
  file: path={{ item }}
    owner=jenkins
    group=jenkins
  with_fileglob: "{{ azulinho_jenkins_plugins['plugins_dir'] }}"
  tags: ['jenkins', 'jenkins_plugins', 'jenkins_nonpublished_plugins']

- name: safe-restart jenkins
  command: java -jar {{ azulinho_jenkins_plugins['cli_dest'] }} -s http://localhost:{{ azulinho_jenkins_plugins['port'] }} safe-restart
  when: _jenkins_unofficial_plugins.changed or _jenkins_official_plugins.changed
  tags: ['jenkins', 'jenkins_plugins', 'jenkins_nonpublished_plugins']

- name: wait for jenkins to restart, it can take forever
  command: sleep 180
  tags: ['jenkins', 'jenkins_plugins', 'jenkins_nonpublished_plugins']
  when: _jenkins_unofficial_plugins.changed or _jenkins_official_plugins.changed
